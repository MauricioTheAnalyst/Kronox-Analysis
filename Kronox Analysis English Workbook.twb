<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Earnings Reports' inline='true' name='federated.0jf771x08xg0uu1d3u4xi1p1p2ux' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Kronox Analysis (English)' name='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MrSpo/Downloads/Kronox Analysis (English).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Balance Sheets' name='excel-direct.1l12ym21qxktj91c84br90dim18n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MrSpo/Downloads/Kronox Analysis (English).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
          <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Availabilities' ordinal='2' />
            <column datatype='real' name='Banks' ordinal='3' />
            <column datatype='real' name='Loanable Capital' ordinal='4' />
            <column datatype='real' name='Commercial Credits' ordinal='5' />
            <column datatype='real' name='Overdue Credits' ordinal='6' />
            <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
            <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
            <column datatype='real' name='Sum of Assets' ordinal='9' />
            <column datatype='real' name='Bank Loans' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19' name='Earnings Reports' table='[&apos;Earnings Reports$&apos;]' type='table'>
            <columns gridOrigin='A1:E54:no:A1:E54:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='real' name='Total Revenue' ordinal='2' />
              <column datatype='real' name='Total Expenses' ordinal='3' />
              <column datatype='real' name='Net Income or Loss' ordinal='4' />
            </columns>
          </relation>
          <relation connection='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
            <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='real' name='Availabilities' ordinal='2' />
              <column datatype='real' name='Banks' ordinal='3' />
              <column datatype='real' name='Loanable Capital' ordinal='4' />
              <column datatype='real' name='Commercial Credits' ordinal='5' />
              <column datatype='real' name='Overdue Credits' ordinal='6' />
              <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
              <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
              <column datatype='real' name='Sum of Assets' ordinal='9' />
              <column datatype='real' name='Bank Loans' ordinal='10' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Availabilities]' value='[Balance Sheets].[Availabilities]' />
          <map key='[Bank Loans]' value='[Balance Sheets].[Bank Loans]' />
          <map key='[Banks]' value='[Balance Sheets].[Banks]' />
          <map key='[Commercial Credits]' value='[Balance Sheets].[Commercial Credits]' />
          <map key='[Date (Balance Sheets)]' value='[Balance Sheets].[Date]' />
          <map key='[Date]' value='[Earnings Reports].[Date]' />
          <map key='[Loanable Capital]' value='[Balance Sheets].[Loanable Capital]' />
          <map key='[Net Income or Loss]' value='[Earnings Reports].[Net Income or Loss]' />
          <map key='[Other Accounts Recievable]' value='[Balance Sheets].[Other Accounts Recievable]' />
          <map key='[Overdue Credits]' value='[Balance Sheets].[Overdue Credits]' />
          <map key='[Row ID (Balance Sheets)]' value='[Balance Sheets].[Row ID]' />
          <map key='[Row ID]' value='[Earnings Reports].[Row ID]' />
          <map key='[Sum of Assets]' value='[Balance Sheets].[Sum of Assets]' />
          <map key='[Total Accounts Recievable]' value='[Balance Sheets].[Total Accounts Recievable]' />
          <map key='[Total Expenses]' value='[Earnings Reports].[Total Expenses]' />
          <map key='[Total Revenue]' value='[Earnings Reports].[Total Revenue]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E54:no:A1:E54:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K42:no:A1:K42:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Revenue]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Total Revenue</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Income or Loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net Income or Loss]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Net Income or Loss</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID (Balance Sheets)]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date (Balance Sheets)]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Availabilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Availabilities]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Availabilities</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Banks]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Banks</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loanable Capital</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Loanable Capital]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Loanable Capital</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial Credits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial Credits]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Commercial Credits</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overdue Credits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overdue Credits]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Overdue Credits</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Accounts Recievable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other Accounts Recievable]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Other Accounts Recievable</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Accounts Recievable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Accounts Recievable]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Total Accounts Recievable</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum of Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum of Assets]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Sum of Assets</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bank Loans</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bank Loans]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Bank Loans</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Row ID (Balance Sheets)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Total Expenses]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Revenue]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Balance Sheets' datatype='table' name='[__tableau_internal_object_id__].[Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Earnings Reports' datatype='table' name='[__tableau_internal_object_id__].[Earnings Reports_3F9E696015E44C96930A93F3E38DC117]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Revenue]' derivation='Sum' name='[sum:Total Revenue:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Balance Sheets' id='Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B'>
            <properties context=''>
              <relation connection='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
                <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Availabilities' ordinal='2' />
                  <column datatype='real' name='Banks' ordinal='3' />
                  <column datatype='real' name='Loanable Capital' ordinal='4' />
                  <column datatype='real' name='Commercial Credits' ordinal='5' />
                  <column datatype='real' name='Overdue Credits' ordinal='6' />
                  <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
                  <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
                  <column datatype='real' name='Sum of Assets' ordinal='9' />
                  <column datatype='real' name='Bank Loans' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Earnings Reports' id='Earnings Reports_3F9E696015E44C96930A93F3E38DC117'>
            <properties context=''>
              <relation connection='excel-direct.0zg4cgk1fn5s6y1ciffrs12cjh19' name='Earnings Reports' table='[&apos;Earnings Reports$&apos;]' type='table'>
                <columns gridOrigin='A1:E54:no:A1:E54:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Total Revenue' ordinal='2' />
                  <column datatype='real' name='Total Expenses' ordinal='3' />
                  <column datatype='real' name='Net Income or Loss' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (Balance Sheets)]' />
            </expression>
            <first-end-point object-id='Earnings Reports_3F9E696015E44C96930A93F3E38DC117' />
            <second-end-point object-id='Balance Sheets_BB7861E2F6244C0ABED87595CC83E44B' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Balance Sheets (Kronox Analysis (English))' inline='true' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Balance Sheets' name='excel-direct.10kkkn103yb5y0194vhc71iihgwp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MrSpo/Downloads/Kronox Analysis (English).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10kkkn103yb5y0194vhc71iihgwp' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
          <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='Availabilities' ordinal='2' />
            <column datatype='real' name='Banks' ordinal='3' />
            <column datatype='real' name='Loanable Capital' ordinal='4' />
            <column datatype='real' name='Commercial Credits' ordinal='5' />
            <column datatype='real' name='Overdue Credits' ordinal='6' />
            <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
            <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
            <column datatype='real' name='Sum of Assets' ordinal='9' />
            <column datatype='real' name='Bank Loans' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.10kkkn103yb5y0194vhc71iihgwp' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
            <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='real' name='Availabilities' ordinal='2' />
              <column datatype='real' name='Banks' ordinal='3' />
              <column datatype='real' name='Loanable Capital' ordinal='4' />
              <column datatype='real' name='Commercial Credits' ordinal='5' />
              <column datatype='real' name='Overdue Credits' ordinal='6' />
              <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
              <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
              <column datatype='real' name='Sum of Assets' ordinal='9' />
              <column datatype='real' name='Bank Loans' ordinal='10' />
            </columns>
          </relation>
          <relation connection='excel-direct.10kkkn103yb5y0194vhc71iihgwp' name='Earnings Reports' table='[&apos;Earnings Reports$&apos;]' type='table'>
            <columns gridOrigin='A1:E54:no:A1:E54:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='date' name='Date' ordinal='1' />
              <column datatype='real' name='Total Revenue' ordinal='2' />
              <column datatype='real' name='Total Expenses' ordinal='3' />
              <column datatype='real' name='Net Income or Loss' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Availabilities]' value='[Balance Sheets].[Availabilities]' />
          <map key='[Bank Loans]' value='[Balance Sheets].[Bank Loans]' />
          <map key='[Banks]' value='[Balance Sheets].[Banks]' />
          <map key='[Commercial Credits]' value='[Balance Sheets].[Commercial Credits]' />
          <map key='[Date (Earnings Reports)]' value='[Earnings Reports].[Date]' />
          <map key='[Date]' value='[Balance Sheets].[Date]' />
          <map key='[Loanable Capital]' value='[Balance Sheets].[Loanable Capital]' />
          <map key='[Net Income or Loss]' value='[Earnings Reports].[Net Income or Loss]' />
          <map key='[Other Accounts Recievable]' value='[Balance Sheets].[Other Accounts Recievable]' />
          <map key='[Overdue Credits]' value='[Balance Sheets].[Overdue Credits]' />
          <map key='[Row ID (Earnings Reports)]' value='[Earnings Reports].[Row ID]' />
          <map key='[Row ID]' value='[Balance Sheets].[Row ID]' />
          <map key='[Sum of Assets]' value='[Balance Sheets].[Sum of Assets]' />
          <map key='[Total Accounts Recievable]' value='[Balance Sheets].[Total Accounts Recievable]' />
          <map key='[Total Expenses]' value='[Earnings Reports].[Total Expenses]' />
          <map key='[Total Revenue]' value='[Earnings Reports].[Total Revenue]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K42:no:A1:K42:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E54:no:A1:E54:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Availabilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Availabilities]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Availabilities</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Banks</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Banks]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Banks</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loanable Capital</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Loanable Capital]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Loanable Capital</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Commercial Credits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Commercial Credits]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Commercial Credits</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overdue Credits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Overdue Credits]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Overdue Credits</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Accounts Recievable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other Accounts Recievable]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Other Accounts Recievable</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Accounts Recievable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Accounts Recievable]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Total Accounts Recievable</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum of Assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum of Assets]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Sum of Assets</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bank Loans</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Bank Loans]</local-name>
            <parent-name>[Balance Sheets]</parent-name>
            <remote-alias>Bank Loans</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Balance Sheets_F5B1F226F6644527ABBB960980358D46]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID (Earnings Reports)]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date (Earnings Reports)]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Revenue</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Revenue]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Total Revenue</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Expenses</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Expenses]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Total Expenses</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net Income or Loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Net Income or Loss]</local-name>
            <parent-name>[Earnings Reports]</parent-name>
            <remote-alias>Net Income or Loss</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Availabilities]' role='measure' type='quantitative' />
      <column datatype='real' name='[Bank Loans]' role='measure' type='quantitative' />
      <column datatype='real' name='[Banks]' role='measure' type='quantitative' />
      <column datatype='real' name='[Commercial Credits]' role='measure' type='quantitative' />
      <column datatype='real' name='[Loanable Capital]' role='measure' type='quantitative' />
      <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
      <column datatype='real' name='[Other Accounts Recievable]' role='measure' type='quantitative' />
      <column datatype='real' name='[Overdue Credits]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID (Earnings Reports)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sum of Assets]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Accounts Recievable]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Expenses]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total Revenue]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Balance Sheets' datatype='table' name='[__tableau_internal_object_id__].[Balance Sheets_F5B1F226F6644527ABBB960980358D46]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Earnings Reports' datatype='table' name='[__tableau_internal_object_id__].[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Balance Sheets_F5B1F226F6644527ABBB960980358D46]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Balance Sheets_F5B1F226F6644527ABBB960980358D46:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Availabilities]' derivation='Sum' name='[sum:Availabilities:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Bank Loans]' derivation='Sum' name='[sum:Bank Loans:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Banks]' derivation='Sum' name='[sum:Banks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Commercial Credits]' derivation='Sum' name='[sum:Commercial Credits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loanable Capital]' derivation='Sum' name='[sum:Loanable Capital:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other Accounts Recievable]' derivation='Sum' name='[sum:Other Accounts Recievable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Overdue Credits]' derivation='Sum' name='[sum:Overdue Credits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum of Assets]' derivation='Sum' name='[sum:Sum of Assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Accounts Recievable]' derivation='Sum' name='[sum:Total Accounts Recievable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Revenue]' derivation='Sum' name='[sum:Total Revenue:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Net Income or Loss:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Expenses:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[__tableau_internal_object_id__].[cnt:Balance Sheets_F5B1F226F6644527ABBB960980358D46:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[__tableau_internal_object_id__].[cnt:Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Revenue:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Loanable Capital:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Bank Loans:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Accounts Recievable:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Banks:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Balance Sheets' id='Balance Sheets_F5B1F226F6644527ABBB960980358D46'>
            <properties context=''>
              <relation connection='excel-direct.10kkkn103yb5y0194vhc71iihgwp' name='Balance Sheets' table='[&apos;Balance Sheets$&apos;]' type='table'>
                <columns gridOrigin='A1:K42:no:A1:K42:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Availabilities' ordinal='2' />
                  <column datatype='real' name='Banks' ordinal='3' />
                  <column datatype='real' name='Loanable Capital' ordinal='4' />
                  <column datatype='real' name='Commercial Credits' ordinal='5' />
                  <column datatype='real' name='Overdue Credits' ordinal='6' />
                  <column datatype='real' name='Other Accounts Recievable' ordinal='7' />
                  <column datatype='real' name='Total Accounts Recievable' ordinal='8' />
                  <column datatype='real' name='Sum of Assets' ordinal='9' />
                  <column datatype='real' name='Bank Loans' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Earnings Reports' id='Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242'>
            <properties context=''>
              <relation connection='excel-direct.10kkkn103yb5y0194vhc71iihgwp' name='Earnings Reports' table='[&apos;Earnings Reports$&apos;]' type='table'>
                <columns gridOrigin='A1:E54:no:A1:E54:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='real' name='Total Revenue' ordinal='2' />
                  <column datatype='real' name='Total Expenses' ordinal='3' />
                  <column datatype='real' name='Net Income or Loss' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Date]' />
              <expression op='[Date (Earnings Reports)]' />
            </expression>
            <first-end-point object-id='Balance Sheets_F5B1F226F6644527ABBB960980358D46' />
            <second-end-point object-id='Earnings Reports_75C91322FB7C49B6B9B0F3DF2F168242' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Income Statements (Kronox Analysis (English))' inline='true' name='federated.0r77yjy1x94u3u0zuvfnv09du0er' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Income Statement' name='excel-direct.18ud1t401yh98n13dho8y1skjnn3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MrSpo/Downloads/Kronox Analysis (English).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18ud1t401yh98n13dho8y1skjnn3' name='Income Statements' table='[&apos;Income Statements$&apos;]' type='table'>
          <columns gridOrigin='A1:D182:no:A1:D182:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Type of Income' ordinal='2' />
            <column datatype='real' name='Income (Quantity)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.18ud1t401yh98n13dho8y1skjnn3' name='Income Statements' table='[&apos;Income Statements$&apos;]' type='table'>
          <columns gridOrigin='A1:D182:no:A1:D182:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Type of Income' ordinal='2' />
            <column datatype='real' name='Income (Quantity)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Income Statements]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D182:no:A1:D182:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Income Statements]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Income Statements]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Income</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Income]</local-name>
            <parent-name>[Income Statements]</parent-name>
            <remote-alias>Type of Income</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income (Quantity)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Income (Quantity)]</local-name>
            <parent-name>[Income Statements]</parent-name>
            <remote-alias>Income (Quantity)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue' datatype='real' name='[Income (Quantity)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Income Statements' datatype='table' name='[__tableau_internal_object_id__].[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Income Statements' id='Income Statements_75E9123D21B445CFA7BF9A05B536EC64'>
            <properties context=''>
              <relation connection='excel-direct.18ud1t401yh98n13dho8y1skjnn3' name='Income Statements' table='[&apos;Income Statements$&apos;]' type='table'>
                <columns gridOrigin='A1:D182:no:A1:D182:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Type of Income' ordinal='2' />
                  <column datatype='real' name='Income (Quantity)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Expenses Sheet (Kronox Analysis (English))' inline='true' name='federated.06dj9v10n4ia9o1c3out10mdenvn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Expense Sheet' name='excel-direct.1g7oaz21lsmq7k1cuje5r0swkwh0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/MrSpo/Downloads/Kronox Analysis (English).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1g7oaz21lsmq7k1cuje5r0swkwh0' name='Expenses Sheet' table='[&apos;Expenses Sheet$&apos;]' type='table'>
          <columns gridOrigin='A1:D2568:no:A1:D2568:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Type of Expense' ordinal='2' />
            <column datatype='real' name='Expense(Price)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1g7oaz21lsmq7k1cuje5r0swkwh0' name='Expenses Sheet' table='[&apos;Expenses Sheet$&apos;]' type='table'>
          <columns gridOrigin='A1:D2568:no:A1:D2568:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Type of Expense' ordinal='2' />
            <column datatype='real' name='Expense(Price)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Expenses Sheet]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D2568:no:A1:D2568:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Expenses Sheet]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Expenses Sheet]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type of Expense</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type of Expense]</local-name>
            <parent-name>[Expenses Sheet]</parent-name>
            <remote-alias>Type of Expense</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Expense(Price)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Expense(Price)]</local-name>
            <parent-name>[Expenses Sheet]</parent-name>
            <remote-alias>Expense(Price)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Type of Expense]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Expenses Sheet' datatype='table' name='[__tableau_internal_object_id__].[Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258]' role='measure' type='quantitative' />
      <column-instance column='[Type of Expense Set]' derivation='InOut' name='[io:Type of Expense Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[Type of Expense]' member='&quot;SALARIES&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Set 2' name='[Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[Type of Expense]' member='&quot;SALARIES&quot;' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[yr:Date:ok]' member='2018' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2019' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2020' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2021' />
            <groupfilter function='member' level='[yr:Date:ok]' member='2022' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Type of Expense Set' name='[Type of Expense Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Type of Expense]' member='&quot;COMMISSIONS FOR MANAGEMENT OF GROUPS&quot;' />
          <groupfilter function='member' level='[Type of Expense]' member='&quot;COMMISSIONS FROM DEBT COLLECTION&quot;' />
          <groupfilter function='member' level='[Type of Expense]' member='&quot;SALARIES&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Type of Expense Set:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Expenses Sheet' id='Expenses Sheet_0EFFF9BC819540DABF921EFEDC1E5258'>
            <properties context=''>
              <relation connection='excel-direct.1g7oaz21lsmq7k1cuje5r0swkwh0' name='Expenses Sheet' table='[&apos;Expenses Sheet$&apos;]' type='table'>
                <columns gridOrigin='A1:D2568:no:A1:D2568:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Type of Expense' ordinal='2' />
                  <column datatype='real' name='Expense(Price)' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Commercial Credits Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='real' name='[Commercial Credits]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Commercial Credits]' derivation='Sum' name='[sum:Commercial Credits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Commercial Credits: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Global Maximum</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</field>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1888199.1299999999</value>
                    <value>#2021-03-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='72' y='232' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Commercial Credits: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Global Minimum, caused by the Covid-19 Pandemic</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</field>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1082851.76</value>
                    <value>#2020-05-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='46' y='146' />
          </annotation>
          <annotation class='area' id='3' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>Kronox suffered a significant decrease in commercial credits due to the Covid 19 Pandemic but then stableized its commerical credits account at a higher average by January 2021</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-02-20 07:22:50.914#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='757645.44574158173'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-12-02 15:09:10.524#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='447135.01715896628'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F71D57E1-66D8-4B12-BF1E-1BE17CB5F63D}' />
    </worksheet>
    <worksheet name='Expenses Tree Map by Year'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Salaries expense has generally increased overtime. Most notably, salaries expense more than doubled between 2019 and 2020 despite there not being an increase in number of employees.   </run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Expenses Sheet (Kronox Analysis (English))' name='federated.06dj9v10n4ia9o1c3out10mdenvn' />
          </datasources>
          <datasource-dependencies datasource='federated.06dj9v10n4ia9o1c3out10mdenvn'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Expense(Price)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Expense]' role='dimension' type='nominal' />
            <column-instance column='[Type of Expense]' derivation='None' name='[none:Type of Expense:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expense(Price)]' derivation='Sum' name='[sum:Expense(Price):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]'>
            <groupfilter from='2018' function='range' level='[yr:Date:ok]' to='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' />
              <color column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' />
              <lod column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[none:Type of Expense:nk]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{84C8A048-5673-42F1-B659-B98530683D44}' />
    </worksheet>
    <worksheet name='Expenses Tree Map with Payroll Expenses in Orange'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Payroll Expenses account for 38.36% of all company expenses, not including employee benefits and other employee expenses.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Expenses Sheet (Kronox Analysis (English))' name='federated.06dj9v10n4ia9o1c3out10mdenvn' />
          </datasources>
          <datasource-dependencies datasource='federated.06dj9v10n4ia9o1c3out10mdenvn'>
            <column datatype='real' name='[Expense(Price)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Expense]' role='dimension' type='nominal' />
            <column-instance column='[Type of Expense Set]' derivation='InOut' name='[io:Type of Expense Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type of Expense]' derivation='None' name='[none:Type of Expense:nk]' pivot='key' type='nominal' />
            <column-instance column='[Expense(Price)]' derivation='Sum' name='[pcto:sum:Expense(Price):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Expense(Price)]' derivation='Sum' name='[sum:Expense(Price):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' />
              <color column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[io:Type of Expense Set:nk]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[none:Type of Expense:nk]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[pcto:sum:Expense(Price):qk]' />
              <text column='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CDC661E0-F23C-48E9-B9C5-41582353CAE6}' />
    </worksheet>
    <worksheet name='Income Earned by Type of income'>
      <table>
        <view>
          <datasources>
            <datasource caption='Income Statements (Kronox Analysis (English))' name='federated.0r77yjy1x94u3u0zuvfnv09du0er' />
          </datasources>
          <datasource-dependencies datasource='federated.0r77yjy1x94u3u0zuvfnv09du0er'>
            <column caption='Revenue' datatype='real' name='[Income (Quantity)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Income Statements' datatype='integer' name='[__tableau_internal_object_id__].[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type of Income]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Income Statements' datatype='table' name='[__tableau_internal_object_id__].[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Income Statements_75E9123D21B445CFA7BF9A05B536EC64]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Income Statements_75E9123D21B445CFA7BF9A05B536EC64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type of Income]' derivation='None' name='[none:Type of Income:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income (Quantity)]' derivation='Sum' name='[pcto:sum:Income (Quantity):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Income (Quantity)]' derivation='Sum' name='[sum:Income (Quantity):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Type of Income:nk]' />
              <groupfilter function='member' level='[none:Type of Income:nk]' member='&quot;REC.CAP. EN CARTERA VDA. 2013 Y ANTERIOR&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]</column>
            <column>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]' />
              <text column='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[Multiple Values]' />
              <text column='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[pcto:sum:Income (Quantity):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]</rows>
        <cols>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='375'>
            <formatted-text>
              <run fontcolor='#787878'>Type of Income: </run>
              <run bold='true'><![CDATA[<[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>% of Total Revenue along Table (Across): </run>
              <run bold='true'><![CDATA[<[federated.0r77yjy1x94u3u0zuvfnv09du0er].[pcto:sum:Income (Quantity):qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Revenue: </run>
              <run bold='true'><![CDATA[<[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Only 4.05% of income comes from Overdue Credits Account and almost none of it comes from Other Accounts Recieveable. </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true'>Note that Overdue Credits and Other Accounts Recievable account for 59.9% of all Accounts Recievable.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]</field>
                      <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]</field>
                      <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[pcto:sum:Income (Quantity):qk]</field>
                      <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[:Measure Names]</field>
                      <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;INTEREST EARNED FROM OVERDUE CREDITS&quot;</value>
                    <value>227037.77999999997</value>
                    <value>0.040518193933815234</value>
                    <value>&quot;[federated.0r77yjy1x94u3u0zuvfnv09du0er].[sum:Income (Quantity):qk]&quot;</value>
                    <value>227037.77999999997</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-39' y='-419' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{4671042A-0DAB-46E4-8420-BC280F1C8741}' />
    </worksheet>
    <worksheet name='Net Income or Loss Overtime'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Net Income or Loss Overtime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Earnings Reports' name='federated.0jf771x08xg0uu1d3u4xi1p1p2ux' />
          </datasources>
          <datasource-dependencies datasource='federated.0jf771x08xg0uu1d3u4xi1p1p2ux'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]' value='87' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]' value='90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='1000.0' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='244' />
                <format attr='maxheight' value='244' />
                <format attr='minwidth' value='738' />
                <format attr='maxwidth' value='738' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</rows>
        <cols>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='155'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Global Minimum caused by increase in spending from starting to take a salary from the business  </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>-15824.0</value>
                    <value>#2019-07-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-245' y='-179' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Caused by Covid 19 Pandemic</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>-4700.0</value>
                    <value>#2020-06-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-223' y='-276' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Global  Maximum, also an exeption month because Kronox won a court dispute.</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>74469.0</value>
                    <value>#2022-04-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-170' y='72' />
          </annotation>
          <annotation class='area' id='5' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='12' underline='true'>Net Income</run>
              <run>Æ&#10;</run>
              <run bold='true' fontsize='12'>$1,260,149.36 </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true' fontsize='12'>January 2018-May 2022</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-01-31 01:40:09.448#'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='75500.078303425777'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-11-22 18:23:37.322#'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='59621.472430668844'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{267CD2DE-DE02-45CA-9099-07CECF23C828}' />
    </worksheet>
    <worksheet name='Net Income or Loss Overtime with Forecast (Bars)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Earnings Reports' name='federated.0jf771x08xg0uu1d3u4xi1p1p2ux' />
          </datasources>
          <datasource-dependencies datasource='federated.0jf771x08xg0uu1d3u4xi1p1p2ux'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' forecast-column-base='[sum:Net Income or Loss:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]' value='104' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]' value='90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#c1d4c1</color>
                <color>#aad0aa</color>
                <color>#94cc94</color>
                <color>#7fc77f</color>
                <color>#6ac36a</color>
                <color>#56bf56</color>
                <color>#44bb44</color>
                <color>#31b631</color>
                <color>#20b220</color>
                <color>#0fae0f</color>
                <color>#00aa00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]</rows>
        <cols>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>The Forecast or Expected Value/Average Net Income of Kronox is $45,333. This indicates that on any given month the business can expect to make around $45,333 pesos. If Net Income is lower we say we had a slow month, if Net Income is higher we say we had a good month. </run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2019-08-29 11:43:17.277#'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='133320.42414849924'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-12-24 00:27:38.638#'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='100467.3548072289'>
                  <node-reference>
                    <axis>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{7D1E9452-DA1A-4C7F-992B-00080776553E}' />
    </worksheet>
    <worksheet name='Net Income or Loss in each Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Earnings Reports' name='federated.0jf771x08xg0uu1d3u4xi1p1p2ux' />
          </datasources>
          <datasource-dependencies datasource='federated.0jf771x08xg0uu1d3u4xi1p1p2ux'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cae1ca</color>
                <color>#a7d1a7</color>
                <color>#87c287</color>
                <color>#6bb26b</color>
                <color>#51a351</color>
                <color>#3a933a</color>
                <color>#278327</color>
                <color>#177417</color>
                <color>#0a640a</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</rows>
        <cols>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>On Average, April is the best month</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4</value>
                    <value>223640.70000000001</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>On Average, December is the slowest month. This is caused by increased spending on anniversary festivities and the disbursement of employee bonuses</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[mn:Date:ok]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>12</value>
                    <value>33153.979999999996</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-61' y='-410' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{4D14D983-893F-4591-A782-BF92561C04F9}' />
    </worksheet>
    <worksheet name='Other Accounts Recieveable Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Other Accounts Recievable]' role='measure' type='quantitative' />
            <column-instance column='[Other Accounts Recievable]' derivation='Sum' name='[sum:Other Accounts Recievable:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Other Accounts Recievable: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>The only point since 2019 where Other Accounts Recieveable went down. </run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</field>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1915068.79</value>
                    <value>#2022-02-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-44' y='197' />
          </annotation>
          <annotation class='area' id='1' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>In general, once a credit is accounted for in Other Accounts Recievable, it does not leave that account.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-04-05 19:21:46.146#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='999151.363531715'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-01-30 18:54:14.572#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='654733.99931088509'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D2EBEA46-2741-4373-9DD8-58494E8D13DE}' />
    </worksheet>
    <worksheet name='Overdue Credits Overtime'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>Overdue credits has been slowly going down, however, the graph indicates that changes have gotten smaller and smaller in scale overtime. This could be caused by a multitude of factors and needs to be investigated further. Company Leadership should check in with debt collectors.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Overdue Credits]' role='measure' type='quantitative' />
            <column-instance column='[Overdue Credits]' derivation='Sum' name='[sum:Overdue Credits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ff9d9a' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontalignment='0'>Decrease of 15.5% Between January 2019 - May 2022</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-07-23 15:10:57.531#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='896166.65250000008'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2022-04-23 18:08:01.436#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='743955.14091125957'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1480EBF2-1DCD-4115-BAAE-B08C381CC0C0}' />
    </worksheet>
    <worksheet name='Pie Chart of Types of Credits and Other Accounts Recievable'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='real' name='[Commercial Credits]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date (Earnings Reports)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Other Accounts Recievable]' role='measure' type='quantitative' />
            <column datatype='real' name='[Overdue Credits]' role='measure' type='quantitative' />
            <column-instance column='[Commercial Credits]' derivation='Sum' name='[sum:Commercial Credits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other Accounts Recievable]' derivation='Sum' name='[sum:Other Accounts Recievable:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Overdue Credits]' derivation='Sum' name='[sum:Overdue Credits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (Earnings Reports)]' derivation='Month-Trunc' name='[tmn:Date (Earnings Reports):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Commercial Credits:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Other Accounts Recievable:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Overdue Credits:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date (Earnings Reports):qk]' included-values='in-range'>
            <min>#2022-05-01 00:00:00#</min>
            <max>#2022-05-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]</column>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date (Earnings Reports):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' />
              <wedge-size column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[Multiple Values]' />
              <text column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' />
              <text column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[Multiple Values]' />
              <lod column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date (Earnings Reports):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>Other Accounts Recievable and Overdue Credits account for 59.9% of Kronox&apos;s Total Accounts Recievable</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.398693'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.399716'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-282' y='58' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run bold='true'>While Commercial Credits account for only 40.1% of Total Accounts Recievable, it still accounts for 85.6% of all income earned. </run>
              <run>Æ&#10;&#10;</run>
              <run bold='true'>More Info on Next Slide</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.59232'>
                  <node-reference />
                </x-coord>
                <y-coord cell-offset='0.499289'>
                  <node-reference />
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='236' y='150' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{AEBBE514-36AA-42B4-B420-DCF2232AF817}' />
    </worksheet>
    <worksheet name='Revenue vs Expenses Dual Axis Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Earnings Reports' name='federated.0jf771x08xg0uu1d3u4xi1p1p2ux' />
          </datasources>
          <datasource-dependencies datasource='federated.0jf771x08xg0uu1d3u4xi1p1p2ux'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Expenses]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Revenue]' role='measure' type='quantitative' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Expenses]' derivation='Sum' name='[sum:Total Expenses:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Revenue]' derivation='Sum' name='[sum:Total Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[:Measure Names]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[:Measure Names]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[:Measure Names]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]' />
              <lod column='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk] + [federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk])</rows>
        <cols>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='23' text-width='334'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Net Income or Loss: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Expenses: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Revenue: </run>
              <run bold='true'><![CDATA[<[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]>]]></run>
              <run>Æ&#10;</run>
              <run bold='true'>Expenses exceeded revenue, resulting in highest Net Loss of all time</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Revenue:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[tmn:Date:qk]</field>
                      <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>-15824.0</value>
                    <value>91593.0</value>
                    <value>75769.0</value>
                    <value>#2019-07-01 00:00:00#</value>
                    <value>&quot;[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Total Expenses:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='110' y='-173' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{D5C653D8-FA6F-4539-87C8-8A6917E03699}' />
    </worksheet>
    <worksheet name='Scatterplot of Net Income or Loss vs Availabilities'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='real' name='[Availabilities]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date (Earnings Reports)]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Net Income or Loss]' role='measure' type='quantitative' />
            <column-instance column='[Availabilities]' derivation='Sum' name='[sum:Availabilities:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Net Income or Loss]' derivation='Sum' name='[sum:Net Income or Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date (Earnings Reports)]' derivation='Month-Trunc' name='[tmn:Date (Earnings Reports):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' />
              <lod column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date (Earnings Reports):qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Net Income or Loss:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>Throughout my analysis, I wondered if having less money in availabilities correlated with a  higher net income. While it appears that a negative relationship between Net Income and Availabilites exists, its R-squared statistic is 0.05 and its p-value is 0.18, implying that if the relationship exists, it is trivial and should not drive business decisions.</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='190600.91330551184'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='72046.854444444441'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='860934.63382913382'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Availabilities:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='56596.718888888878'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Net Income or Loss:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{B0BDB1C4-3B13-490C-863C-601845F0AE1D}' />
    </worksheet>
    <worksheet name='Sum of Assets Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sum of Assets]' role='measure' type='quantitative' />
            <column-instance column='[Sum of Assets]' derivation='Sum' name='[sum:Sum of Assets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sum of Assets: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</field>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>4933508.7000000002</value>
                    <value>#2019-02-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='34' y='88' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Month of Date: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sum of Assets: </run>
              <run bold='true'><![CDATA[<[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</field>
                      <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>5324115.3300000001</value>
                    <value>#2022-05-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-28' y='95' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>Valuation of Company Assets has grown by:</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true'>$390,606.63 pesos </run>
              <run>Æ&#10;</run>
              <run bold='true'>or </run>
              <run>Æ&#10;</run>
              <run bold='true'>7.9%</run>
              <run>Æ&#10;&#10;</run>
              <run bold='true'>Over the past 3.5 years</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-11-02 20:50:17.091#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='3397094.1040595146'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-11-05 06:31:02.069#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2512798.9893429917'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Sum of Assets:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{5150CF79-02FF-4528-BDA5-B2878614A336}' />
    </worksheet>
    <worksheet name='Total Accounts Recievable Overtime'>
      <table>
        <view>
          <datasources>
            <datasource caption='Balance Sheets (Kronox Analysis (English))' name='federated.0qr0pl11si2pzw14ls4qz1rh4lly' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr0pl11si2pzw14ls4qz1rh4lly'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Total Accounts Recievable]' role='measure' type='quantitative' />
            <column-instance column='[Total Accounts Recievable]' derivation='Sum' name='[sum:Total Accounts Recievable:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:Date:ok]' />
              <groupfilter function='member' level='[tmn:Date:ok]' member='#2019-01-01 00:00:00#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Accounts Recievable:qk]</rows>
        <cols>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true'>Total Accounts Recievable is the sum of Commercial Credits, Overdue Credits, and Other Accounts Recievable</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2020-10-16 06:42:54.512#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='2236052.1280501168'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Accounts Recievable:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2021-12-04 14:03:19.700#'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='1464999.6701018007'>
                  <node-reference>
                    <axis>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[sum:Total Accounts Recievable:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{DDCD82FF-91A8-487E-91CD-FB22936D124F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' maximized='true' name='Net Income or Loss Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A09676D-8D27-40A1-9873-ACDD956F8153}' />
    </window>
    <window class='worksheet' name='Net Income or Loss Overtime with Forecast (Bars)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[fVal:sum:Net Income or Loss:qk]</field>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[none:Row ID:ok]</field>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D5A4F85-9321-434F-BD07-53299055F631}' />
    </window>
    <window class='worksheet' name='Net Income or Loss in each Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[sum:Net Income or Loss:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A34A712-4CED-4C09-A030-254740A9B749}' />
    </window>
    <window class='worksheet' name='Revenue vs Expenses Dual Axis Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jf771x08xg0uu1d3u4xi1p1p2ux].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E0762E0-D263-4692-98CC-876A96BE370F}' />
    </window>
    <window class='worksheet' name='Sum of Assets Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DD366A7-2B8C-4BD4-BE05-865865BAC766}' />
    </window>
    <window class='worksheet' name='Commercial Credits Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8E9BFA1-09C4-4554-A75C-F95DF0222866}' />
    </window>
    <window class='worksheet' name='Overdue Credits Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3432E7E2-EDDB-4417-8B48-19338D8B5B65}' />
    </window>
    <window class='worksheet' name='Other Accounts Recieveable Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{116C331F-BAE8-4784-8365-6474064BC11E}' />
    </window>
    <window class='worksheet' name='Total Accounts Recievable Overtime'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64126B69-77B5-4E91-ABE7-D65E3B786789}' />
    </window>
    <window class='worksheet' name='Scatterplot of Net Income or Loss vs Availabilities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]</field>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date (Earnings Reports):ok]</field>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{88BA2E24-04AE-4698-A275-1A4E4AB555A2}' />
    </window>
    <window class='worksheet' name='Pie Chart of Types of Credits and Other Accounts Recievable'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[tmn:Date (Earnings Reports):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[:Measure Names]</field>
            <field>[federated.0qr0pl11si2pzw14ls4qz1rh4lly].[yr:Date (Earnings Reports):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97A8E0FB-8EEA-4137-A2D1-D2B5629EB9C2}' />
    </window>
    <window class='worksheet' name='Income Earned by Type of income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0r77yjy1x94u3u0zuvfnv09du0er].[none:Type of Income:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{58C0E52F-60AE-42F4-A002-4C50D2AF0F3F}' />
    </window>
    <window class='worksheet' name='Expenses Tree Map with Payroll Expenses in Orange'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06dj9v10n4ia9o1c3out10mdenvn].[io:Type of Expense Set:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[io:Type of Expense Set:nk]</field>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[none:Type of Expense:nk]</field>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D63A7766-9797-4BE9-9034-57B9D836ECF4}' />
    </window>
    <window class='worksheet' name='Expenses Tree Map by Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='92'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[none:Type of Expense:nk]</field>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[qr:Date:ok]</field>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[sum:Expense(Price):qk]</field>
            <field>[federated.06dj9v10n4ia9o1c3out10mdenvn].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50BD9DE3-9767-404B-90A1-2CA04CFF45E5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Commercial Credits Overtime' width='192'>
      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
      /w/JUtLKBwajbQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Expenses Tree Map by Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Expenses Tree Map with Payroll Expenses in Orange' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Income Earned by Type of income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Net Income or Loss Overtime' width='192'>
      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
      /Avp25nDxo14DwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Net Income or Loss Overtime with Forecast (Bars)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Net Income or Loss in each Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Other Accounts Recieveable Overtime' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overdue Credits Overtime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Chart of Types of Credits and Other Accounts Recievable' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue vs Expenses Dual Axis Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatterplot of Net Income or Loss vs Availabilities' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sum of Assets Overtime' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Accounts Recievable Overtime' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
